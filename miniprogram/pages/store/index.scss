@import '../../style/theme.scss';
.header{
  display: flex;
  padding:0 30rpx;
  box-sizing: border-box;
  width: 100%;
  justify-content: space-between;
  align-items: center;
  height: 109rpx;
  .search{
    width: 174rpx;
    height: 58rpx;
    background-color: #f5f5f5;
    padding: 18rpx 26rpx;
    border-radius: 29rpx;
    box-sizing: border-box;
    padding:0 26rpx;
    font-size: 28rpx;
    color: #d1d1d1;
  }
}
.store-map{
  width: 100%;
  height: 520rpx;
  position: relative;
  .current-icon{
    width: 44rpx;
    height: 44rpx;
    position: absolute;
    right: 18rpx;
    bottom: 22rpx;
  }
}
.collapse-area{
  width: 100%;
  height: 70rpx;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 23rpx;
  color: $gray-text-color;
  image{
    width: 30rpx;
    height: 30rpx;
    margin-left: 10rpx;
  }
}
.store-list{
  width: 100%;
  height: calc(100vh - 700rpx);
  background-color: #f8f8f8;
  // 小程序一般都是怪异盒子模型，所以一般都是需要设置 box-sizing 的
  box-sizing: border-box;
  .store-box{
    background-color: #ffffff;
    padding:25rpx;
    margin: 14rpx 25rpx;
    display: flex;
    align-items: center;
    .info-area{
      border-right: 1px solid #eeeeee;
      // 这样弹性盒子的效果就出来了，占满后面的空间
      flex: 1;
      .name{
        font-size: 28rpx;
        font-weight: bold;
        margin-bottom:12rpx;
      }
      .info{
        font-size: 18rpx;
        color: $gray-text-color;
        margin-bottom: 12rpx;
      }
      .tag{
        // 这样不是一个block，是一个inline的话就可以做 padding 了
        display: inline-block;
        background-color: $primary-color;
        color: #fff;
        font-size: 18rpx;
        padding: 6rpx;
      }
    }
    .location-area{
      height: 112rpx;
      margin-left: 25rpx;
      display: flex;
      flex-direction: column;
      align-items: center;
      .distance{
        font-size: 20rpx;
        color: $gray-text-color;
        margin-bottom: 35rpx;
      }
      .action-area{
        display: flex;
        width: 112rpx;
        justify-content: space-around;
        image{
          width: 40rpx;
          height: 40rpx;
        }
      }
    }
  }
}